#이것이_코딩_테스트다
#특정_거리의_도시_찾기

#"모든 간선의 비용이 동일할 때는 bfs를 이용하여 최단 거리를 찾을 수 있다."

#정답
from collections import deque

n, m, k, x = map(int, input().split())

graph = [[] for _ in range(n+1)]
for _ in range(m):
    start, end = map(int, input().split())
    graph[start].append(end)

distance = [-1] * (n+1) #최단 거리 초기화
distance[x] = 0

#bfs 수행
q = deque([x])
while q:
    now = q.popleft()
    for next_node in graph[now]:
        if distance[next_node] == -1:
            distance[next_node] = distance[now] + 1
            q.append(next_node)

check = False
for i in range(1, n+1):
    if distance[i] == k:
        print(i)
        check = True

if check == False:
    print(-1)
